name: Release Version

on:
  workflow_call:
    inputs:
      release_candidate:
        type: boolean
        description: "Release Candidate"
        required: true
        default: true
      release_candidate_name:
        type: string
        description: "Release Candidate Name, adjust after every succinct release candidate (e.g. to rc.2, rc.3...)"
        required: true
        default: "rc.1"
    outputs:
      version:
        description: "The release version to use"
        value: ${{ jobs.get-release-version.outputs.release-version }}
      version_no_prefix:
        description: "The release version to use without the 'v' prefix"
        value: ${{ jobs.get-release-version.outputs.release-version-no-prefix }}

jobs:
  get-release-version:
    name: Get Release Version
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      base-version: ${{ steps.set-base-version.outputs.BASE_VERSION }}
      release-version: ${{ steps.export-version.outputs.RELEASE_VERSION }}
      release-version-no-prefix: ${{ steps.export-version.outputs.RELEASE_VERSION_NO_PREFIX }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '${{ github.workspace }}/go.mod'
          cache: false

      - name: Generate Base Version
        id: set-base-version
        run: |
          BASE_VERSION=v$(go run $GITHUB_WORKSPACE/api/version/generate print-version)
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_OUTPUT

      - name: Set Version for Release Candidate
        if: inputs.release_candidate == true
        run: |
          RELEASE_VERSION=v$(go run $GITHUB_WORKSPACE/api/version/generate --no-dev print-rc-version ${{ inputs.release_candidate_name }})
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
      - name: Set Version
        if: inputs.release_candidate == false
        run: |
          RELEASE_VERSION=${{env.BASE_VERSION}}
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Export Version
        id: export-version
        run: |
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION_NO_PREFIX=${RELEASE_VERSION#v}" >> $GITHUB_OUTPUT