name: Release Note Creation

on:
  workflow_dispatch:

jobs:
  releasenotes:
    name: Prepare Release Notes
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      repository-projects: read
    steps:
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.OCMBOT_APP_ID }}
        private_key: ${{ secrets.OCMBOT_PRIV_KEY }}
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: '${{ github.workspace }}/go.mod'
        cache: false

    - name: Get go environment for use with cache
      run: |
        echo "go_cache=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "go_modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV

    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<41898282+github-actions[bot]@users.noreply.github.com>"

    - name: Set Version
      run: |
        RELEASE_VERSION=v$(go run $GITHUB_WORKSPACE/api/version/generate print-version)
        echo "release version is $RELEASE_VERSION"
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

    - name: Get Draft Release Notes
      id: release-notes
      uses: cardinalby/git-get-release-action@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        draft: true
        releaseName: ${{ env.RELEASE_VERSION }}

    - name: Update Release Notes File
      id: update-release-notes
      env:
        RELEASE_NOTES: ${{ steps.release-notes.outputs.body }}
      run: |
        set -e
        echo "Release Notes:\n $RELEASE_NOTES'"
        v="v$(go run $GITHUB_WORKSPACE/api/version/generate print-version)"
        f="docs/releasenotes/$v.md"
        echo "$RELEASE_NOTES" > "$f"
        
        echo "RELEASE_NOTES_FILE=$f" >> $GITHUB_OUTPUT
        echo "RELEASE_NOTES_VERSION=$v" >> $GITHUB_OUTPUT

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ steps.generate_token.outputs.token }}
        title: "chore: release notes for ${{ steps.update-release-notes.outputs.RELEASE_NOTES_VERSION }}"
        commit-message: "[github-actions] release notes for ${{ steps.update-release-notes.outputs.RELEASE_NOTES_VERSION }}"
        branch: "chore/release/notes/${{ steps.update-release-notes.outputs.RELEASE_NOTES_VERSION }}"
        delete-branch: true
        sign-commits: true
        body: |
          Update Release Notes for ${{ steps.update-release-notes.outputs.RELEASE_NOTES_VERSION }}
          
          Prepares the Release Notes for the next release in ${{ steps.update-release-notes.outputs.RELEASE_NOTES_FILE }}
          
