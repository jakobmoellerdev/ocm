
# This creates a new release branch from the main branch.
# It serves as the cutoff point for the next minor release.
# From this point onward only bug fixes and critical changes will be accepted onto the release
# branch as backports from main. At the same time, the main branch will be open for new features
# and changes for the next minor release.
name: Release Branch Cutoff

on:
  workflow_dispatch:
    inputs:
      minor:
        type: string
        description: |
          Minor Release version (e.g. v0.17) to create a release branch from.
          The branch will be created in the form of 'releases/v0.17'.
          
          The branch will contain an initial commit with a VERSION file containing the minor release version.
          The branch will be pushed to the origin repository.
        required: true

jobs:
  create-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      repository-projects: read
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.OCMBOT_APP_ID }}
          private_key: ${{ secrets.OCMBOT_PRIV_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Create Release Branch
        run: |
          set -e
          git config --global user.name github-actions
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
          
          minor="${{github.event.inputs.minor}}"
          
          if ! [[ "$tag" =~ ^v?[0-9]+\.[0-9]+$ ]]; then
            >&2 echo "no valid release branch minor $minor: it has to be of the form '^v?[0-9]+\.[0-9]+$'"
            exit 1
          fi
          
          
          branch="releases/$minor"
          
          if git ls-remote --exit-code origin refs/heads/$branch ; then
            >&2 echo "branch $branch already exists, aborting"
            exit 1
          fi
          
          echo "creating release branch: $branch"
          
          git checkout -b "$branch"
          git push origin $branch
  bump-main-pr:
    name: Bump Main Branch to the next Minor Version
    runs-on: ubuntu-latest
    needs: create-branch # wait for the release branch to be created, then create a version bump
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.OCMBOT_APP_ID }}
          private_key: ${{ secrets.OCMBOT_PRIV_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: Create Bump PR
        run: |
          set -e
          git config --global user.name github-actions
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
          
          echo "determining next version"
          version=$(go run ./api/version/generate bump-version)
          
          branch="chore/bump-main/$version"
          
          git checkout -b chore/bump-main-to-$branch
          
          echo "bumping main branch to $version"
          echo $version > VERSION

          # Trigger a bump of any potential files that depend on a new version
          make -f hack/Makefile mdref && make -f hack/Makefile go-bindata && make generate
          
          git commit -m "Bump main branch to $version after branch cutoff"
          
          gh pr create \
            --fill-first \
            --base main \
            --head $branch
          
